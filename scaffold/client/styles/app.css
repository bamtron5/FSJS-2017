pagination button.active {
  border: 1px solid black; }

splash .md-button {
  max-width: 180px; }

splash .button-group {
  justify-content: center; }

splash h2 {
  text-align: center; }

splash .md-button, splash h1, splash h2 {
  position: relative;
  z-index: 2;
  margin-top: 1px; }

splash,
splash video, splash #bgvid {
  position: fixed;
  top: 50%;
  left: 50%;
  min-width: 100%;
  min-height: 100%;
  width: auto;
  height: auto;
  z-index: 1;
  -ms-transform: translateX(-50%) translateY(-50%);
  -moz-transform: translateX(-50%) translateY(-50%);
  -webkit-transform: translateX(-50%) translateY(-50%);
  transform: translateX(-50%) translateY(-50%);
  background: url("/client/public/polina.jpg") no-repeat;
  background-size: cover; }

splash video {
  margin-top: 0px; }

chat .chat-container {
  overflow-y: auto;
  margin: auto; }

chat .sticky-toolbar {
  margin: auto; }

chat .chat-text-box {
  margin: auto; }

chat .content-msg {
  border-radius: 10px;
  border: 1px solid white;
  padding: 10px 20px;
  background: black;
  margin-bottom: 2px;
  position: relative; }

chat .chat-item {
  padding: 5px; }

chat .chat-item:nth-child(odd) {
  background-blend-mode: hard-light; }

chat .contestant-a .content-msg:after {
  content: "";
  width: 10px;
  height: 10px;
  position: absolute;
  bottom: 9px;
  left: -5px;
  z-index: 9999;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent;
  border-right: 10px solid white; }

chat .contestant-b .content-msg:after {
  content: "";
  position: absolute;
  bottom: 9px;
  right: -5px;
  z-index: 9999;
  width: 0;
  height: 0;
  border-top: 10px solid transparent;
  border-bottom: 10px solid transparent;
  border-left: 10px solid white; }

[ng\:cloak], [ng-cloak], [data-ng-cloak], [x-ng-cloak], .ng-cloak, .x-ng-cloak {
  display: none !important; }

body, html {
  overflow-x: hidden;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0; }

.ui-view-container {
  display: flex;
  flex: 1;
  flex-direction: column;
  position: relative; }

.ui-view-container > ui-view {
  flex: 1; }

.ui-view-container ui-view.ng-enter, .ui-view-container ui-view.ng-leave {
  position: absolute;
  left: 0;
  right: 0;
  -webkit-transition: all .5s ease-in-out;
  -moz-transition: all .5s ease-in-out;
  -o-transition: all .5s ease-in-out;
  transition: all .5s ease-in-out; }

.ui-view-container ui-view.ng-enter {
  opacity: 0;
  -webkit-transform: scale3d(0.5, 0.5, 0.5);
  -moz-transform: scale3d(0.5, 0.5, 0.5);
  transform: scale3d(0.5, 0.5, 0.5); }

.ui-view-container ui-view.ng-enter-active {
  opacity: 1;
  -webkit-transform: scale3d(1, 1, 1);
  -moz-transform: scale3d(1, 1, 1);
  transform: scale3d(1, 1, 1); }

.ui-view-container ui-view.ng-leave {
  opacity: 1;
  -webkit-transform: translate3d(0, 0, 0);
  -moz-transform: translate3d(0, 0, 0);
  transform: translate3d(0, 0, 0); }

.ui-view-container ui-view.ng-leave-active {
  opacity: 0;
  -webkit-transform: translate3d(100px, 0, 0);
  -moz-transform: translate3d(100px, 0, 0);
  transform: translate3d(100px, 0, 0); }

.border-btn {
  border: 1px solid black; }

.flexbox-parent {
  width: 100%;
  height: 100%;
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  /* align items in Main Axis */
  align-items: stretch;
  /* align items in Cross Axis */
  align-content: stretch;
  /* Extra space in Cross Axis */
  background: rgba(222, 0, 235, 0.3); }

.flexbox-parent.h10 {
  height: 100%; }

.flexbox-parent.h9 {
  height: 90%; }

.flexbox-parent.h8 {
  height: 80%; }

.flexbox-parent.h7 {
  height: 70%; }

.flexbox-parent.h6 {
  height: 60%; }

.flexbox-parent.h5 {
  height: 50%; }

.flexbox-parent.h4 {
  height: 40%; }

.flexbox-parent.h3 {
  height: 30%; }

.flexbox-parent.h2 {
  height: 20%; }

.flexbox-parent.h1 {
  height: 10%; }

.flexbox-item {
  padding: 8px; }

.flexbox-item-grow {
  flex: 1;
  /* same as flex: 1 1 auto; */ }

.flexbox-item.header {
  background: rgba(255, 0, 0, 0.1); }

.flexbox-item.footer {
  background: rgba(0, 255, 0, 0.1); }

.flexbox-item.content {
  background: rgba(0, 0, 255, 0.1); }

.fill-area {
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  /* align items in Main Axis */
  align-items: stretch;
  /* align items in Cross Axis */
  align-content: stretch;
  /* Extra space in Cross Axis */ }

.fill-area-content {
  background: rgba(0, 0, 0, 0.3);
  border: 1px solid #000000;
  /* Needed for when the area gets squished too far and there is content that can't be displayed */
  overflow: auto; }
